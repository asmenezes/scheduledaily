{"version":3,"sources":["reducers/booleanreducer.js","contexts/booleancontext.js","components/creation/creationselection.js","components/creation/creationselectioninput.js","reducers/schedulereducer.js","contexts/schedulecontext.js","contexts/daynotescontext.js","components/creation/creationsidebar.js","components/scripts/shared.js","components/taskblock.js","components/creation/schedulepreview.js","components/creation/subtaskcreator.js","components/creation/taskcreator.js","components/backheader.js","components/creation/main.js","components/schedule/scheduleheader.js","components/schedule/subtaskdisplay.js","components/schedule/currenttaskdisplay.js","components/schedule/booleanlist.js","components/schedule/upcominglist.js","components/schedule/daynotes.js","components/schedule/schedulemain.js","App.js","serviceWorker.js","index.js"],"names":["booleanReducer","state","action","type","boolName","bool","bID","Math","floor","random","pID","isComplete","filter","BooleanContext","createContext","BooleanContextProvider","props","useReducer","localData","localStorage","getItem","JSON","parse","bools","boolsDispatch","useEffect","setItem","stringify","console","log","Provider","value","children","CreationSelection","useContext","className","onClick","selectionname","CreationSelectionInput","useState","setName","onSubmit","e","preventDefault","placeholder","name","onChange","target","required","scheduleReducer","index","findIndex","task","tID","taskName","startTime","endTime","taskNotes","subtasks","sort","a","b","hoursA","Number","substring","hoursB","minutesA","minutesB","insertByTime","ind","note","ScheduleContext","ScheduleContextProvider","tasks","dispatch","DayNotesContext","DayNotesContextProvider","initNote","jsonNote","setNote","editNote","newNote","CreationSidebar","Fragment","id","map","key","cols","rows","defaultValue","dateConv","time","today","Date","setHours","setMinutes","disp12Time","timeString","hours","TaskBlock","st","stName","SchedulePreview","SubtaskPreview","subtask","stType","indic","setIndic","goal","indicVal","setIndicVal","checked","min","max","unchecked","stID","TaskCreator","setStartTime","setEndTime","setNotes","setSubtasks","setstName","htmlFor","pattern","sub","BackHeader","toDateString","to","Main","ScheduleHeader","todayInitial","document","getElementById","prog","et","done","style","animationName","width","animationTimingFunction","animationDuration","animationIterationCount","SubtaskDisplay","CurrentDisplay","now","currentIndex","toString","change","BooleanList","UpcomingList","DayNotes","ScheduleMain","App","baseline","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.62c18428.chunk.js","sourcesContent":["export const booleanReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_BOOL\":\n      return [\n        ...state,\n        {\n          boolName: action.bool.boolName,\n          bID: Math.floor(Math.random() * 900000),\n          pID: 1,\n          isComplete: false,\n        }\n      ]\n\n    case \"REMOVE_BOOL\":\n      return state.filter((bool) => bool.bID !== action.bID);\n    default:\n      return state;\n  }\n};\n// Add Complete_bool\n","import React, { createContext, useReducer, useEffect } from \"react\";\nimport { booleanReducer } from \"../reducers/booleanreducer\";\n\nexport const BooleanContext = createContext();\n\nconst BooleanContextProvider = (props) => {\n  const [bools, boolsDispatch] = useReducer(booleanReducer, [], () => {\n    const localData = localStorage.getItem(\"bools\");\n    return localData ? JSON.parse(localData) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem(\"bools\", JSON.stringify(bools));\n    console.log(`Bools was just set to ${JSON.stringify(bools)}`);\n  }, [bools]);\n  return (\n    <BooleanContext.Provider value={{ bools, boolsDispatch }}>\n      {props.children}\n    </BooleanContext.Provider>\n  );\n};\n\nexport default BooleanContextProvider;\n","import React, {useContext} from \"react\";\nimport { BooleanContext } from \"../../contexts/booleancontext\";\n\nfunction CreationSelection(props) {\n  const {boolsDispatch} = useContext(BooleanContext)\n  return (\n    <div className=\"creationselection\">\n      <button className=\"deletebutton\" onClick={() => boolsDispatch({ type: \"REMOVE_BOOL\", bID: props.bool.bID })}>x</button>\n      <p className=\"selectionname\">{props.selectionname}</p>\n    </div>\n  );\n}\n\nexport default CreationSelection;\n","import React, {useState, useContext} from \"react\";\nimport {BooleanContext} from \"../../contexts/booleancontext\";\n\n\nfunction CreationSelectionInput(props) {\n    const { boolsDispatch } = useContext(BooleanContext);\n    const [boolName, setName] = useState(\"\");\n    const handleSubmit = (e) => {\n      e.preventDefault();\n      boolsDispatch({\n        type: \"ADD_BOOL\",\n        bool: {\n          boolName\n        },\n      });\n      console.log(boolName)\n      setName(\"\");}\n  return (\n    <div className=\"creationselection\">\n    <form onSubmit={handleSubmit}>\n      <input\n        className=\"selectioninput\"\n        placeholder=\"New\"\n        type=\"text\"\n        name=\"AltAdder\"\n        value={boolName}\n        onChange={(e) => setName(e.target.value)}\n        required\n          />\n        <input type=\"submit\" value=\"+\" className=\"deletebutton\" />\n      </form>\n    </div>\n  );\n}\n\nexport default CreationSelectionInput;\n","export const scheduleReducer = (state, action) => {\n  let index = state.findIndex((task) => task.tID == action.tID);\n  switch (action.type) {\n    case \"ADD_TASK\":\n      return insertByTime(state, action.task);\n\n    case \"REMOVE_TASK\":\n      return state.filter((task) => task.tID !== action.tID);\n    case \"TOGGLE_TASK\":\n      state[index].isComplete = !state[index].isComplete;\n      return state;\n    case \"EDIT_TASK_NOTE\":\n      console.log(action.task.ind);\n      state[action.task.ind].taskNotes = action.task.note;\n      console.log(state[action.task.ind].taskNotes);\n      return [...state];\n    default:\n      return state;\n  }\n};\n//add and remove SubTasks\n//edit subtasks\nfunction insertByTime(state, task) {\n  state = [\n    ...state,\n    {\n      taskName: task.taskName,\n      tID: Math.floor(Math.random() * 900000),\n      pID: 1,\n      startTime: task.startTime,\n      endTime: task.endTime,\n      isComplete: false,\n      taskNotes: task.taskNotes,\n      subtasks: task.subtasks,\n    },\n  ];\n  state.sort(function (a, b) {\n    let hoursA = Number(a.startTime.substring(0, 2));\n    let hoursB = Number(b.startTime.substring(0, 2));\n    let minutesA = Number(a.startTime.substring(3, 5));\n    let minutesB = Number(b.startTime.substring(3, 5));\n\n    if (hoursA < hoursB || (hoursA === hoursB && minutesA < minutesB)) {\n      return -1;\n    }\n    if (hoursB < hoursA) {\n      return 1;\n    }\n\n    return 0;\n  });\n  return [...state];\n}\n","import React, { createContext, useReducer, useEffect } from \"react\";\nimport { scheduleReducer } from \"../reducers/schedulereducer\";\n\nexport const ScheduleContext = createContext();\n\nconst ScheduleContextProvider = (props) => {\n  const [tasks, dispatch] = useReducer(scheduleReducer, [], () => {\n    const localData = localStorage.getItem(\"tasks\");\n    return localData ? JSON.parse(localData) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    console.log(`Tasks was just set to ${JSON.stringify(tasks)}`);\n  }, [tasks]);\n  return (\n    <ScheduleContext.Provider value={{ tasks, dispatch }}>\n      {props.children}\n    </ScheduleContext.Provider>\n  );\n};\n\nexport default ScheduleContextProvider;\n","import React, { createContext, useEffect, useState } from \"react\";\n\nexport const DayNotesContext = createContext();\n\nconst DayNotesContextProvider = (props) => {\n  let initNote = localStorage.getItem(\"note\");\n  let jsonNote = initNote\n    ? JSON.parse(initNote)\n    : [{ note: \"Today's Notes: \" }];\n  const [note, setNote] = useState(jsonNote);\n  const editNote = (newNote) => {\n    setNote([{ note: newNote }]);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"note\", JSON.stringify(note));\n    console.log(`Notes was just set to ${JSON.stringify(note)}`);\n  }, [note]);\n  return (\n    <DayNotesContext.Provider value={{ note, editNote }}>\n      {props.children}\n    </DayNotesContext.Provider>\n  );\n};\n\nexport default DayNotesContextProvider;\n","import React, { useContext } from \"react\";\nimport CreationSelection from \"./creationselection\";\nimport CreationSelectionInput from \"./creationselectioninput\";\nimport { ScheduleContext } from \"../../contexts/schedulecontext\";\nimport { BooleanContext } from \"../../contexts/booleancontext\";\nimport { DayNotesContext } from \"../../contexts/daynotescontext\";\n\nfunction CreationSidebar() {\n  const { tasks } = useContext(ScheduleContext);\n  const { bools } = useContext(BooleanContext);\n\n  const { note, editNote } = useContext(DayNotesContext);\n  return (\n    <React.Fragment>\n      <div className=\"sidebar\" id=\"creationsidebar\">\n        <div className=\"sidebarlabel\">\n          <p className=\"lighttext\">Preset Schedules:</p>\n          <div className=\"sidebarlist\">\n            <CreationSelection selectionname={\"Selection\"} />\n          </div>\n          <button id=\"createpresetbutton\">Create Preset From Current</button>\n        </div>\n        <div className=\"sidebarlabel\">\n          <p className=\"lighttext\">Preset Tasks:</p>\n          <div className=\"sidebarlist\">\n            <ul>\n              {tasks.map((task) => {\n                return (\n                  <CreationSelection\n                    selectionname={task.taskName}\n                    key={task.tID}\n                  />\n                );\n              })}\n            </ul>\n\n            <CreationSelectionInput action=\"ADD_PRESET\" />\n          </div>\n        </div>\n        <div className=\"sidebarlabel\">\n          <p className=\"lighttext\">Un-Timed Tasks:</p>\n          <div className=\"sidebarlist\">\n            {bools[0] ? (\n              <ul>\n                {bools.map((bool) => {\n                  return (\n                    <CreationSelection\n                      selectionname={bool.boolName}\n                      key={bool.bID}\n                      bool={bool}\n                    />\n                  );\n                })}\n              </ul>\n            ) : null}\n            <CreationSelectionInput action=\"ADD_BOOl\" />\n          </div>\n        </div>\n        <textarea\n          cols=\"28\"\n          rows=\"6\"\n          className=\"dayNotes\"\n          onChange={(e) => editNote(e.target.value)}\n          defaultValue={note[0] ? note[0].note : null}\n        ></textarea>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default CreationSidebar;\n","export const dateConv = (time) => {\n  let today = new Date();\n  today.setHours(Number(time.substring(0, 2)));\n  today.setMinutes(Number(time.substring(3, 5)));\n  return today;\n};\nexport const disp12Time = (timeString) => {\n  let hours = Number(timeString.substring(0, 2));\n  if (hours > 12) {\n    hours -= 12;\n    let newtime = hours + \":\" + timeString.substring(3, 5) + \"pm\";\n    return newtime;\n  }\n  if (hours == 12) {\n    return timeString + \"pm\";\n  }\n  //Make am no leading zeros too\n\n  let newtime = hours + \":\" + timeString.substring(3, 5) + \"am\";\n  return newtime;\n};\n","import React, { useContext } from \"react\";\nimport { ScheduleContext } from \"../contexts/schedulecontext\";\nimport { disp12Time } from \"./scripts/shared\";\n\nfunction TaskBlock({ task }) {\n  const { dispatch } = useContext(ScheduleContext);\n  return task ? (\n    <div className=\"taskblock\">\n      <button\n        className=\"deletebutton\"\n        onClick={() => dispatch({ type: \"REMOVE_TASK\", tID: task.tID })}\n      >\n        x\n      </button>\n      <p className=\"taskname\">{task.taskName}</p>\n      <div className=\"time\">\n        <p className=\"stime\">{disp12Time(task.startTime)}</p>\n        <p>{disp12Time(task.endTime)}</p>\n      </div>\n      {task.subtasks[0] ? (\n        <div className=\"subtask\">\n          <ul className=\"subBarList\">\n            <span className=\"subBar\" key={Math.floor(Math.random() * 900000)}>\n              {task.subtasks.map((st) => {\n                {\n                  return (\n                    <span\n                      className=\"subBarName\"\n                      key={Math.floor(Math.random() * 900000)}\n                    >\n                      {st.stName}\n                      {\"\\t\"}\n                    </span>\n                  );\n                }\n              })}\n            </span>\n          </ul>\n        </div>\n      ) : null}\n    </div>\n  ) : null;\n}\n\nexport default TaskBlock;\n","import React, { useContext } from \"react\";\nimport TaskBlock from \"../taskblock\";\nimport { ScheduleContext } from \"../../contexts/schedulecontext\";\n\nconst SchedulePreview = () => {\n  const { tasks } = useContext(ScheduleContext);\n\n  return (\n    <div className=\"schedulepreviewcontainer\">\n      <div className=\"schedulepreview\">\n        <ul id=\"previewlist\">\n          {tasks.map((task) => {\n            return <TaskBlock task={task} key={task.tID} />;\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default SchedulePreview;\n","import React, { useContext, useState } from \"react\";\nimport { ScheduleContext } from \"../../contexts/schedulecontext\";\n\nfunction SubtaskPreview(props) {\n  const { dispatch } = useContext(ScheduleContext);\n  const [name, setName] = useState(props.subtask.stName);\n  const [indic, setIndic] = useState(props.subtask.stType);\n  const [indicVal, setIndicVal] = useState(props.subtask.goal);\n  return (\n    <div className=\"subtaskpreview\">\n      <div className=\"creater of subtasks\">\n        <input\n          className=\"subtasknameinput taskcreationinput\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          type=\"text\"\n        />\n\n        <label className=\"switch\" id=\"typeselector\">\n          <input\n            type=\"checkbox\"\n            name=\"indication\"\n            onChange={(e) => setIndic(!indic)}\n            className=\"check\"\n            checked={indic}\n          />\n          <span className=\"slider\"></span>\n        </label>\n        {indic ? (\n          <input\n            type=\"number\"\n            name=\"indicval\"\n            onChange={(e) => setIndicVal(e.target.value)}\n            value={indicVal}\n            min={1}\n            max={999}\n          />\n        ) : (\n          <input type=\"checkbox\" name=\"indicval\" unchecked=\"true\" />\n        )}\n        <span\n          className=\"stSub\"\n          onClick={() =>\n            dispatch({ type: \"REMOVE_SUB\", stID: props.subtask.stID })\n          }\n        >\n          -\n        </span>\n      </div>\n    </div>\n  );\n}\n//on change edit subtask in scheduleReducer\nexport default SubtaskPreview;\n","import React, { useContext, useState } from \"react\";\nimport { ScheduleContext } from \"../../contexts/schedulecontext\";\nimport SubtaskPreview from \"./subtaskcreator\";\n\nfunction TaskCreator() {\n  const { dispatch } = useContext(ScheduleContext);\n  const [taskName, setName] = useState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [taskNotes, setNotes] = useState(\"\");\n  const [subtasks, setSubtasks] = useState(\"\");\n  const [stName, setstName] = useState(\"\");\n  const [indic, setIndic] = useState(false);\n  const [indicVal, setIndicVal] = useState(2);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: \"ADD_TASK\",\n      task: {\n        taskName,\n        startTime,\n        endTime,\n        taskNotes,\n        subtasks,\n      },\n    });\n    setName(\"\");\n    setStartTime(\"\");\n    setEndTime(\"\");\n    setNotes(\"Notes: \");\n    setSubtasks(\"\");\n    setIndic(false);\n    setIndicVal(2);\n    setstName(\"\");\n  };\n  const addST = (e) => {\n    setSubtasks([\n      ...subtasks,\n      {\n        stName,\n        stType: indic,\n        goal: indicVal,\n        stID: Math.floor(Math.random() * 900000),\n      },\n    ]);\n    setIndic(false);\n    setIndicVal(2);\n    setstName(\"\");\n  };\n  //hh%3Amm <- time format\n  return (\n    <React.Fragment>\n      <form onSubmit={handleSubmit}>\n        <div id=\"taskcreator\">\n          <div className=\"lineup\">\n            <div>\n              <input\n                className=\"tasknameinput taskcreationinput\"\n                placeholder=\"Task Name\"\n                type=\"text\"\n                value={taskName}\n                onChange={(e) => setName(e.target.value)}\n                name=\"taskName\"\n                required\n              />\n              <label id=\"tasknamelabel\" htmlFor=\"taskName\">\n                Task Name\n              </label>\n            </div>\n            <div id=\"timeinput\" className=\"double\">\n              <div>\n                <label htmlFor=\"starttime\" className=\"timeLabel\">\n                  Start Time\n                </label>\n                <input\n                  className=\"taskcreationinput timeinput\"\n                  type=\"time\"\n                  name=\"starttime\"\n                  onChange={(e) => setStartTime(e.target.value)}\n                  value={startTime}\n                  pattern=\"[0-9]{2}:[0-9]{2}\"\n                  required\n                />\n              </div>\n              <div>\n                <label htmlFor=\"endtime\" className=\"timeLabel\">\n                  End Time\n                </label>\n                <input\n                  className=\"taskcreationinput timeinput\"\n                  type=\"time\"\n                  name=\"endtime\"\n                  onChange={(e) => setEndTime(e.target.value)}\n                  value={endTime}\n                  pattern=\"[0-9]{2}:[0-9]{2}\"\n                  min={startTime}\n                  required\n                />\n              </div>\n            </div>\n            <div className=\"stlist\">\n              {subtasks[0] ? (\n                <ul>\n                  {subtasks.map((sub) => {\n                    return (\n                      <SubtaskPreview\n                        stName={sub.stName}\n                        key={sub.stID}\n                        subtask={sub}\n                      />\n                    );\n                  })}\n                </ul>\n              ) : null}\n            </div>\n            <div>\n              <div className=\"creater of subtasks\">\n                <input\n                  className=\"subtasknameinput taskcreationinput\"\n                  placeholder=\"Subtask Name\"\n                  type=\"text\"\n                  onChange={(e) => setstName(e.target.value)}\n                  value={stName}\n                />\n              </div>\n            </div>\n            <div className=\"secondpart\">\n              <label className=\"switch\" id=\"typeselector\">\n                <input\n                  type=\"checkbox\"\n                  name=\"indication\"\n                  onChange={(e) => setIndic(!indic)}\n                  className=\"check\"\n                  checked={indic}\n                />\n                <span className=\"slider\"></span>\n              </label>\n              {indic ? (\n                <input\n                  type=\"number\"\n                  name=\"indicval\"\n                  onChange={(e) => setIndicVal(e.target.value)}\n                  value={indicVal}\n                  min={1}\n                  max={999}\n                />\n              ) : (\n                <input type=\"checkbox\" name=\"indicval\" unchecked=\"true\" />\n              )}\n              <span onClick={addST} className=\"stSub\">\n                +\n              </span>\n            </div>\n          </div>\n          <textarea\n            cols=\"28\"\n            rows=\"5\"\n            className=\"tasknotesinput taskcreationinput\"\n            onChange={(e) => setNotes(e.target.value)}\n            value={taskNotes}\n          ></textarea>\n\n          <input type=\"submit\" value=\"+\" id=\"creatoradd\" />\n        </div>\n      </form>\n    </React.Fragment>\n  );\n}\n\nexport default TaskCreator;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction BackHeader() {\n  let today = new Date();\n  today = today.toDateString();\n  return (\n    <div className=\"backheader\">\n      <span>{today}</span>\n      <Link className=\"right\" to=\"/dayschedule\">\n        Schedule\n      </Link>\n    </div>\n  );\n}\n\nexport default BackHeader;\n","import React from \"react\";\nimport CreationSidebar from \"./creationsidebar\";\nimport SchedulePreview from \"./schedulepreview\";\nimport TaskCreator from \"./taskcreator\";\nimport BackHeader from \"../backheader\";\nimport ScheduleContextProvider from \"../../contexts/schedulecontext\";\nimport DayNotesContextProvider from \"../../contexts/daynotescontext\";\nimport BooleanContextProvider from \"../../contexts/booleancontext\";\n\nfunction Main() {\n  return (\n    <ScheduleContextProvider>\n      <React.Fragment>\n        <div className=\"doubler\">\n          <div>\n            <BooleanContextProvider>\n              <DayNotesContextProvider>\n                <CreationSidebar />\n              </DayNotesContextProvider>\n            </BooleanContextProvider>\n          </div>\n\n          <div className=\"content\">\n            <BackHeader />\n            <SchedulePreview />\n            <TaskCreator />\n          </div>\n        </div>\n      </React.Fragment>\n    </ScheduleContextProvider>\n  );\n}\n\nexport default Main;\n","import React, { useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ScheduleContext } from \"../../contexts/schedulecontext\";\nimport { dateConv, disp12Time } from \"../scripts/shared.js\";\n\nfunction ScheduleHeader() {\n  const { tasks } = useContext(ScheduleContext);\n  let todayInitial = new Date();\n  let today = todayInitial.toDateString();\n  useEffect(() => {\n    if (document.getElementById(\"progress\")) {\n      const prog = document.getElementById(\"progress\");\n      const st = tasks[0] ? dateConv(tasks[0].startTime) : 0;\n      const et = tasks[0] ? dateConv(tasks[0].endTime): 0;\n      let done = ((et-st)/((et - st) - (et - todayInitial ))*10);\n      let left = ((et - st) - ((et-st)/((et - st) - (et - todayInitial ))));\n      // (((et - st) - (todayInitial - st))/(et-st)); Fix IIIIT\n      console.log(100 - done +\"%\");\n      prog.style.animationName = \"anim\";\n      prog.style.width = 100 - done +\"%\"; //  ((et - st) - (nt - st) ) / et - st\n      prog.style.animationTimingFunction = \"linear\";\n      prog.style.animationDuration = 1+\"s\"; //  ((et - st) - (nt - st))\n      prog.style.animationIterationCount = 1;\n    }\n  }, []);\n  return (\n    <React.Fragment>\n      <div className=\"scheduleheader\">\n        <div className=\"timegroup\">\n          <span>{tasks[0] ? disp12Time(tasks[0].startTime) : null}</span>\n          <span id=\"currenttimedisplay\"></span>\n          <span>{tasks[0] ? disp12Time(tasks[0].endTime) : null}</span>\n        </div>\n        <div className=\"baseline\">\n          <span>{today}</span>\n          <Link className=\"right\" to=\"/\">\n            Schedule Creator\n          </Link>\n        </div>\n        <div id=\"progressbar\">\n          <div id=\"progress\"></div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default ScheduleHeader;\n","import React from \"react\";\n\nfunction SubtaskDisplay(props) {\n  return (\n    <div className=\"subtaskdisplay\">\n      <input type=\"checkbox\" className=\"check\" />\n      <p>{props.stName}</p>\n      <p>Indic Placeholder</p>\n    </div>\n  );\n}\n\nexport default SubtaskDisplay;\n","import React, { useContext, useState } from \"react\";\nimport SubtaskDisplay from \"./subtaskdisplay\";\nimport { ScheduleContext } from \"../../contexts/schedulecontext\";\nimport { dateConv } from \"../scripts/shared\";\n\nfunction CurrentDisplay() {\n  const { tasks, dispatch } = useContext(ScheduleContext);\n\n  let now = new Date();\n\n  let currentIndex = tasks.findIndex(\n    (task) =>\n      dateConv(task.startTime.toString()) <= now &&\n      dateConv(task.endTime.toString()) >= now\n  );\n  const [note, setNote] = useState(\n    currentIndex >= 0 ? tasks[currentIndex.taskNotes] : \"\"\n  );\n\n  const updateNote = (change) => {\n    setNote(change);\n    dispatch({\n      type: \"EDIT_TASK_NOTE\",\n      task: {\n        note: note,\n        ind: currentIndex,\n      },\n    });\n  };\n  return (\n    <div id=\"currentdisplay\">\n      <div id=\"currenttasktop\">\n        <ul className=\"inline\">\n          <h1 id=\"currentdisplayname\">\n            {currentIndex >= 0 ? tasks[currentIndex].taskName : \"Break\"}\n          </h1>\n        </ul>\n        <button id=\"nexttaskbutt\">Next Task</button>\n      </div>\n      <div id=\"currentdiplaysub\">\n        {currentIndex >= 0\n          ? tasks[currentIndex].subtasks\n            ? tasks[currentIndex].subtasks.map((subtask) => {\n                return <SubtaskDisplay stName={subtask.stName} />;\n              })\n            : null\n          : null}\n      </div>\n      <div id=\"currentdisplaynotes\">\n        <textarea\n          className=\"dayNotes fillup\"\n          defaultValue={\n            currentIndex >= 0 ? tasks[currentIndex].taskNotes : \"Task Notes:\"\n          }\n          onChange={\n            currentIndex >= 0 ? (e) => updateNote(e.target.value) : null\n          }\n        ></textarea>\n      </div>\n    </div>\n  );\n}\n\nexport default CurrentDisplay;\n","import React, { useContext } from \"react\";\nimport SubtaskDisplay from \"./subtaskdisplay\";\nimport { BooleanContext } from \"../../contexts/booleancontext\";\n\nfunction BooleanList() {\n  const { bools } = useContext(BooleanContext);\n  return (\n    <div id=\"booleanlist\" className=\"scroll\">\n    {bools[0] ?\n      <ul>\n        {bools.map((bool) => {\n          return <SubtaskDisplay stName={bool.boolName} key={bool.bID} />;\n        })}\n      </ul>\n      : null}\n    </div>\n  );\n}\n\nexport default BooleanList;\n","import React, { useContext } from \"react\";\nimport TaskBlock from \"../taskblock\";\nimport { ScheduleContext } from \"../../contexts/schedulecontext\";\nimport { dateConv } from \"../scripts/shared\";\n\nfunction UpcomingList() {\n  let now = new Date();\n  const { tasks } = useContext(ScheduleContext);\n  return (\n    <div id=\"upcominglist\" className=\"scroll\">\n      <h3 className=\"lightlabel\">Coming Up:</h3>\n      {tasks[0] ? (\n        <ul className=\"scroll\">\n          {tasks.map((task) => {\n            return dateConv(task.startTime.toString()) > now ? (\n              <TaskBlock task={task} key={task.tID} />\n            ) : null;\n          })}\n        </ul>\n      ) : null}\n    </div>\n  );\n}\n\nexport default UpcomingList;\n","import React, {useContext} from \"react\";\nimport { DayNotesContext } from \"../../contexts/daynotescontext\";\n\nfunction DayNotes() {\n  const {note,editNote} = useContext(DayNotesContext)\n\n\n  return <textarea id=\"daynotes\" onChange={(e) => editNote(e.target.value)}\n  defaultValue={note[0]? note[0].note : null}></textarea>;\n}\n\nexport default DayNotes;\n","import React from \"react\";\nimport ScheduleHeader from \"./scheduleheader\";\nimport CurrentDisplay from \"./currenttaskdisplay\";\nimport BooleanList from \"./booleanlist\";\nimport UpcomingList from \"./upcominglist\";\nimport DayNotes from \"./daynotes\";\nimport ScheduleContextProvider from \"../../contexts/schedulecontext\";\nimport DayNotesContextProvider from \"../../contexts/daynotescontext\";\nimport BooleanContextProvider from \"../../contexts/booleancontext\";\n\nfunction ScheduleMain() {\n  return (\n    <div>\n      <ScheduleContextProvider>\n        <ScheduleHeader />\n        <div id=\"schedulegrid\">\n          <CurrentDisplay />\n          <UpcomingList />\n          <DayNotesContextProvider>\n            <DayNotes />\n          </DayNotesContextProvider>\n          <BooleanContextProvider>\n            <BooleanList />\n          </BooleanContextProvider>\n        </div>\n      </ScheduleContextProvider>\n    </div>\n  );\n}\n\nexport default ScheduleMain;\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/creation/main.js\";\nimport ScheduleMain from \"./components/schedule/schedulemain.js\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ScheduleContextProvider from \"./contexts/schedulecontext\";\n\nfunction App() {\n  return (\n    <Router baseline=\"{process.env.PUBLIC_URL + '/'}\">\n      <Switch>\n        <Route path=\"/dayschedule\">\n          <ScheduleContextProvider>\n            <ScheduleMain />\n          </ScheduleContextProvider>\n        </Route>\n        <Route path=\"/\">\n          <ScheduleContextProvider>\n            <Main />\n          </ScheduleContextProvider>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n// <Router>\n//   <Route exact path=\"/\" render={(props) => <Main />} />\n//   <Route exact path=\"/schedule\" render={(props) => <ScheduleMain />} />\n// </Router>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}