{"version":3,"sources":["reducers/booleanreducer.js","contexts/booleancontext.js","reducers/daypresetreducer.js","contexts/daypresetcontext.js","reducers/schedulereducer.js","contexts/schedulecontext.js","components/creation/creationselection.js","components/creation/creationselectioninput.js","contexts/daynotescontext.js","components/creation/creationsidebar.js","components/scripts/shared.js","components/taskblock.js","components/creation/schedulepreview.js","components/creation/subtaskcreator.js","components/creation/taskcreator.js","components/backheader.js","components/creation/main.js","components/scripts/currenttaskscripts.js","components/schedule/scheduleheader.js","components/schedule/subtaskdisplay.js","components/schedule/currenttaskdisplay.js","components/schedule/booleanlist.js","components/schedule/upcominglist.js","components/schedule/daynotes.js","components/schedule/schedulemain.js","App.js","serviceWorker.js","index.js"],"names":["booleanReducer","state","action","type","boolName","bool","bID","Math","floor","random","pID","isComplete","filter","BooleanContext","createContext","BooleanContextProvider","props","useReducer","localData","localStorage","getItem","JSON","parse","bools","boolsDispatch","useEffect","setItem","stringify","console","log","Provider","value","children","DayPresetReducer","presetName","preset","taskList","presetTasks","dpID","DayPresetContext","DayPresetContextProvider","dayPresets","dayDispatch","scheduleReducer","index","findIndex","task","tID","taskName","startTime","endTime","taskNotes","subtasks","sort","a","b","hoursA","Number","substring","hoursB","minutesA","minutesB","insertByTime","tasks","ind","note","ScheduleContext","ScheduleContextProvider","dispatch","CreationSelection","useContext","className","onClick","e","preventDefault","deleteSelection","selectionname","CreationSelectionInput","useState","setName","onSubmit","placeholder","name","onChange","target","required","DayNotesContext","DayNotesContextProvider","initNote","jsonNote","setNote","editNote","newNote","CreationSidebar","Fragment","id","map","key","list","swapTasks","Date","toDateString","cols","rows","defaultValue","dateConv","time","today","setHours","setMinutes","disp12Time","timeString","hours","now","TaskBlock","st","stName","SchedulePreview","SubtaskPreview","subtask","stType","indic","setIndic","goal","indicVal","setIndicVal","checked","min","max","unchecked","stID","TaskCreator","setStartTime","setEndTime","setNotes","setSubtasks","setstName","htmlFor","pattern","sub","BackHeader","to","Main","findCIndex","toString","ScheduleHeader","document","getElementById","prog","et","left","total","style","animationName","width","animationTimingFunction","animationDuration","animationIterationCount","SubtaskDisplay","setValue","key2","query","thisone","querySelector","classList","contains","remove","add","CurrentDisplay","currentIndex","tid","currentName","markText","change","BooleanList","UpcomingList","DayNotes","ScheduleMain","App","baseline","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.42cf535d.chunk.js","sourcesContent":["export const booleanReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_BOOL\":\n      return [\n        ...state,\n        {\n          boolName: action.bool.boolName,\n          bID: Math.floor(Math.random() * 900000),\n          pID: 1,\n          isComplete: false,\n        }\n      ]\n\n    case \"REMOVE_BOOL\":\n      return state.filter((bool) => bool.bID !== action.bID);\n    default:\n      return state;\n  }\n};\n// Add Complete_bool\n","import React, { createContext, useReducer, useEffect } from \"react\";\nimport { booleanReducer } from \"../reducers/booleanreducer\";\n\nexport const BooleanContext = createContext();\n\nconst BooleanContextProvider = (props) => {\n  const [bools, boolsDispatch] = useReducer(booleanReducer, [], () => {\n    const localData = localStorage.getItem(\"bools\");\n    return localData ? JSON.parse(localData) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem(\"bools\", JSON.stringify(bools));\n    console.log(`Bools was just set to ${JSON.stringify(bools)}`);\n  }, [bools]);\n  return (\n    <BooleanContext.Provider value={{ bools, boolsDispatch }}>\n      {props.children}\n    </BooleanContext.Provider>\n  );\n};\n\nexport default BooleanContextProvider;\n","export const DayPresetReducer = (state, action) => {\n  //let index = state.findIndex((task) => task.tID == action.task.tID);\n  switch (action.type) {\n    case \"ADD_PRESET\":\n      return (state = [\n        ...state,\n        {\n          presetName: action.preset.presetName,\n          taskList: action.preset.presetTasks,\n          dpID: Math.floor(Math.random() * 900000),\n        },\n      ]);\n\n    case \"REMOVE_PRESET\":\n      return state.filter((preset) => preset.dpID !== action.dpID);\n    /*  case \"TOGGLE_TASK\":\n      state[index].isComplete = !state[index].isComplete;\n      console.log(\n        `index is ${state[index].isComplete}, tID is ${action.task.tID}`\n      );\n      return state;*/\n    case \"RENAME_PRESET\":\n      return [...state];\n    default:\n      return state;\n  }\n};\n//Switch all this to day preset relevant code\n","import React, { createContext, useEffect, useState, useReducer } from \"react\";\nimport { DayPresetReducer } from \"../reducers/daypresetreducer\";\nexport const DayPresetContext = createContext();\n\nconst DayPresetContextProvider = (props) => {\n  const [dayPresets, dayDispatch] = useReducer(DayPresetReducer, [], () => {\n    const localData = localStorage.getItem(\"dayPresets\");\n    return localData ? JSON.parse(localData) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem(\"dayPresets\", JSON.stringify(dayPresets));\n    console.log(`dayPresets was just set to ${JSON.stringify(dayPresets)}`);\n  }, [dayPresets]);\n  return (\n    <DayPresetContext.Provider value={{ dayPresets, dayDispatch }}>\n      {props.children}\n    </DayPresetContext.Provider>\n  );\n};\n\nexport default DayPresetContextProvider;\n","export const scheduleReducer = (state, action) => {\n  let index = state.findIndex((task) => task.tID == action.task.tID);\n  switch (action.type) {\n    case \"ADD_TASK\":\n      return insertByTime(state, action.task);\n    case \"REPLACE_TASKS\":\n      return [...action.tasks];\n    case \"REMOVE_TASK\":\n      return state.filter((task) => task.tID !== action.task.tID);\n    case \"TOGGLE_TASK\":\n      state[index].isComplete = !state[index].isComplete;\n      console.log(\n        `index is ${state[index].isComplete}, tID is ${action.task.tID}`\n      );\n      return state;\n    case \"EDIT_TASK_NOTE\":\n      console.log(action.task.ind);\n      state[action.task.ind].taskNotes = action.task.note;\n      console.log(state[action.task.ind].taskNotes);\n      return [...state];\n    default:\n      return state;\n  }\n};\n//add and remove SubTasks\n//edit subtasks\nfunction insertByTime(state, task) {\n  state = [\n    ...state,\n    {\n      taskName: task.taskName,\n      tID: Math.floor(Math.random() * 900000),\n      pID: 1,\n      startTime: task.startTime,\n      endTime: task.endTime,\n      isComplete: false,\n      taskNotes: task.taskNotes,\n      subtasks: task.subtasks,\n    },\n  ];\n  state.sort(function (a, b) {\n    let hoursA = Number(a.startTime.substring(0, 2));\n    let hoursB = Number(b.startTime.substring(0, 2));\n    let minutesA = Number(a.startTime.substring(3, 5));\n    let minutesB = Number(b.startTime.substring(3, 5));\n\n    if (hoursA < hoursB || (hoursA === hoursB && minutesA < minutesB)) {\n      return -1;\n    }\n    if (hoursB < hoursA) {\n      return 1;\n    }\n\n    return 0;\n  });\n  return [...state];\n}\n","import React, { createContext, useReducer, useEffect } from \"react\";\nimport { scheduleReducer } from \"../reducers/schedulereducer\";\n\nexport const ScheduleContext = createContext();\n\nconst ScheduleContextProvider = (props) => {\n  const [tasks, dispatch] = useReducer(scheduleReducer, [], () => {\n    const localData = localStorage.getItem(\"tasks\");\n    return localData ? JSON.parse(localData) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    console.log(`Tasks was just set to ${JSON.stringify(tasks)}`);\n  }, [tasks]);\n  return (\n    <ScheduleContext.Provider value={{ tasks, dispatch }}>\n      {props.children}\n    </ScheduleContext.Provider>\n  );\n};\n\nexport default ScheduleContextProvider;\n","import React, { useContext } from \"react\";\nimport { BooleanContext } from \"../../contexts/booleancontext\";\nimport { DayPresetContext } from \"../../contexts/daypresetcontext\";\nimport { ScheduleContext } from \"../../contexts/schedulecontext\";\n\nfunction CreationSelection(props) {\n  //make a switch statement that finds out what the selection is and then deletes it with the appropriate method/context\n  //Possibly also do one that renames the thing\n  const { boolsDispatch } = useContext(BooleanContext);\n  const { dispatch } = useContext(ScheduleContext);\n  const { dayDispatch } = useContext(DayPresetContext);\n  function deleteSelection(e) {\n    e.preventDefault();\n    if (props.bool) {\n      boolsDispatch({ type: \"REMOVE_BOOL\", bID: props.bool.bID });\n    } else if (props.preset) {\n      dayDispatch({ type: \"REMOVE_PRESET\", dpID: props.preset.dpID });\n    }\n  }\n  return (\n    <div className=\"creationselection\">\n      <button className=\"deletebutton\" onClick={(e) => deleteSelection(e)}>\n        x\n      </button>\n      <p className=\"selectionname\" onClick={props.onClick}>\n        {props.selectionname}\n      </p>\n    </div>\n  );\n}\n\nexport default CreationSelection;\n","import React, { useState, useContext } from \"react\";\nimport { BooleanContext } from \"../../contexts/booleancontext\";\n\nfunction CreationSelectionInput(props) {\n  const { boolsDispatch } = useContext(BooleanContext);\n  const [boolName, setName] = useState(\"\");\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    boolsDispatch({\n      type: \"ADD_BOOL\",\n      bool: {\n        boolName,\n      },\n    });\n    setName(\"\");\n  };\n  return (\n    <div className=\"creationselection\">\n      <form onSubmit={handleSubmit}>\n        <input\n          className=\"selectioninput\"\n          placeholder=\"New\"\n          type=\"text\"\n          name=\"AltAdder\"\n          value={boolName}\n          onChange={(e) => setName(e.target.value)}\n          required\n        />\n        <input type=\"submit\" value=\"+\" className=\"deletebutton\" />\n      </form>\n    </div>\n  );\n}\n\nexport default CreationSelectionInput;\n","import React, { createContext, useEffect, useState } from \"react\";\n\nexport const DayNotesContext = createContext();\n\nconst DayNotesContextProvider = (props) => {\n  let initNote = localStorage.getItem(\"note\");\n  let jsonNote = initNote\n    ? JSON.parse(initNote)\n    : [{ note: \"Today's Notes: \" }];\n  const [note, setNote] = useState(jsonNote);\n  const editNote = (newNote) => {\n    setNote([{ note: newNote }]);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"note\", JSON.stringify(note));\n  }, [note]);\n  return (\n    <DayNotesContext.Provider value={{ note, editNote }}>\n      {props.children}\n    </DayNotesContext.Provider>\n  );\n};\n\nexport default DayNotesContextProvider;\n","import React, { useContext } from \"react\";\nimport CreationSelection from \"./creationselection\";\nimport CreationSelectionInput from \"./creationselectioninput\";\nimport { ScheduleContext } from \"../../contexts/schedulecontext\";\nimport { BooleanContext } from \"../../contexts/booleancontext\";\nimport { DayNotesContext } from \"../../contexts/daynotescontext\";\nimport { DayPresetContext } from \"../../contexts/daypresetcontext\";\n\nfunction CreationSidebar() {\n  const { tasks, dispatch } = useContext(ScheduleContext);\n  const { bools } = useContext(BooleanContext);\n  const { dayPresets, dayDispatch } = useContext(DayPresetContext);\n  const { note, editNote } = useContext(DayNotesContext);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dayDispatch({\n      type: \"ADD_PRESET\",\n      preset: {\n        presetName: new Date().toDateString(),\n        presetTasks: tasks,\n      },\n    });\n  };\n  const swapTasks = (e, list) => {\n    e.preventDefault();\n    dispatch({\n      type: \"REPLACE_TASKS\",\n      tasks: list,\n      task: 0,\n    });\n  };\n  return (\n    <React.Fragment>\n      <div className=\"sidebar\" id=\"creationsidebar\">\n        <div className=\"sidebarlabel\">\n          <p className=\"lighttext\">Preset Schedules:</p>\n          <div className=\"sidebarlist\">\n            {dayPresets.map((preset) => {\n              return (\n                <CreationSelection\n                  selectionname={preset.presetName}\n                  preset={preset}\n                  key={preset.dpID}\n                  onClick={(e) => {\n                    swapTasks(e, preset.taskList);\n                  }}\n                />\n              );\n            })}\n          </div>\n          <button id=\"createpresetbutton\" onClick={handleSubmit}>\n            Create Preset From Current\n          </button>\n          {\n            //do add today to presets here ^^ ie handle submit\n          }\n        </div>\n        <div className=\"sidebarlabel\">\n          <p className=\"lighttext\">Preset Tasks:</p>\n          <div className=\"sidebarlist\">\n            <ul>\n              {tasks.map((task) => {\n                return (\n                  <CreationSelection\n                    selectionname={task.taskName}\n                    key={task.tID}\n                  />\n                );\n              })}\n            </ul>\n\n            <CreationSelectionInput action=\"ADD_PRESET\" />\n          </div>\n        </div>\n        <div className=\"sidebarlabel\">\n          <p className=\"lighttext\">Un-Timed Tasks:</p>\n          <div className=\"sidebarlist\">\n            {bools[0] ? (\n              <ul>\n                {bools.map((bool) => {\n                  return (\n                    <CreationSelection\n                      selectionname={bool.boolName}\n                      key={bool.bID}\n                      bool={bool}\n                    />\n                  );\n                })}\n              </ul>\n            ) : null}\n            <CreationSelectionInput action=\"ADD_BOOl\" />\n          </div>\n        </div>\n        <textarea\n          cols=\"28\"\n          rows=\"6\"\n          className=\"dayNotes\"\n          onChange={(e) => editNote(e.target.value)}\n          defaultValue={note[0] ? note[0].note : null}\n        ></textarea>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default CreationSidebar;\n","export const dateConv = (time) => {\n  let today = new Date();\n  today.setHours(Number(time.substring(0, 2)));\n  today.setMinutes(Number(time.substring(3, 5)));\n  return today;\n};\nexport const disp12Time = (timeString) => {\n  let hours = Number(timeString.substring(0, 2));\n  if (hours > 12) {\n    hours -= 12;\n    let newtime = hours + \":\" + timeString.substring(3, 5) + \"pm\";\n    return newtime;\n  }\n\n  let newtime = hours + \":\" + timeString.substring(3, 5) + \"am\";\n  return newtime;\n};\n\nexport let now = new Date();\n","import React, { useContext } from \"react\";\nimport { ScheduleContext } from \"../contexts/schedulecontext\";\nimport { disp12Time } from \"./scripts/shared\";\n\nfunction TaskBlock({ task }) {\n  const { dispatch } = useContext(ScheduleContext);\n  return task ? (\n    <div className=\"taskblock\">\n      <button\n        className=\"deletebutton\"\n        onClick={() =>\n          dispatch({ type: \"REMOVE_TASK\", task: { tID: task.tID } })\n        }\n      >\n        x\n      </button>\n      <p className=\"taskname\">{task.taskName}</p>\n      <div className=\"time\">\n        <p className=\"stime\">{disp12Time(task.startTime)}</p>\n        <p>{disp12Time(task.endTime)}</p>\n      </div>\n      {task.subtasks[0] ? (\n        <div className=\"subtask\">\n          <ul className=\"subBarList\">\n            <span className=\"subBar\" key={Math.floor(Math.random() * 900000)}>\n              {task.subtasks.map((st) => {\n                {\n                  return (\n                    <span\n                      className=\"subBarName\"\n                      key={Math.floor(Math.random() * 900000)}\n                    >\n                      {st.stName}\n                      {\"\\t\"}\n                    </span>\n                  );\n                }\n              })}\n            </span>\n          </ul>\n        </div>\n      ) : null}\n    </div>\n  ) : null;\n}\n\nexport default TaskBlock;\n","import React, { useContext } from \"react\";\nimport TaskBlock from \"../taskblock\";\nimport { ScheduleContext } from \"../../contexts/schedulecontext\";\n\nconst SchedulePreview = () => {\n  const { tasks } = useContext(ScheduleContext);\n\n  return (\n    <div className=\"schedulepreviewcontainer\">\n      <div className=\"schedulepreview\">\n        <ul id=\"previewlist\">\n          {tasks.map((task) => {\n            return <TaskBlock task={task} key={task.tID} />;\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default SchedulePreview;\n","import React, { useContext, useState } from \"react\";\nimport { ScheduleContext } from \"../../contexts/schedulecontext\";\n\nfunction SubtaskPreview(props) {\n  const { dispatch } = useContext(ScheduleContext);\n  const [name, setName] = useState(props.subtask.stName);\n  const [indic, setIndic] = useState(props.subtask.stType);\n  const [indicVal, setIndicVal] = useState(props.subtask.goal);\n  return (\n    <div className=\"subtaskpreview\">\n      <div className=\"creater of subtasks\">\n        <input\n          className=\"subtasknameinput taskcreationinput\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          type=\"text\"\n        />\n\n        <label className=\"switch\" id=\"typeselector\">\n          <input\n            type=\"checkbox\"\n            name=\"indication\"\n            onChange={(e) => setIndic(!indic)}\n            className=\"check\"\n            checked={indic}\n          />\n          <span className=\"slider\"></span>\n        </label>\n        {indic ? (\n          <input\n            type=\"number\"\n            name=\"indicval\"\n            onChange={(e) => setIndicVal(e.target.value)}\n            value={indicVal}\n            min={1}\n            max={999}\n          />\n        ) : (\n          <input type=\"checkbox\" name=\"indicval\" unchecked=\"true\" />\n        )}\n        <span\n          className=\"stSub\"\n          onClick={() =>\n            dispatch({ type: \"REMOVE_SUB\", stID: props.subtask.stID })\n          }\n        >\n          -\n        </span>\n      </div>\n    </div>\n  );\n}\n//on change edit subtask in scheduleReducer\nexport default SubtaskPreview;\n","import React, { useContext, useState } from \"react\";\nimport { ScheduleContext } from \"../../contexts/schedulecontext\";\nimport SubtaskPreview from \"./subtaskcreator\";\n\nfunction TaskCreator() {\n  const { dispatch } = useContext(ScheduleContext);\n  const [taskName, setName] = useState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [taskNotes, setNotes] = useState(\"\");\n  const [subtasks, setSubtasks] = useState(\"\");\n  const [stName, setstName] = useState(\"\");\n  const [indic, setIndic] = useState(false);\n  const [indicVal, setIndicVal] = useState(2);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: \"ADD_TASK\",\n      task: {\n        taskName,\n        startTime,\n        endTime,\n        taskNotes,\n        subtasks,\n      },\n    });\n    setName(\"\");\n    setStartTime(\"\");\n    setEndTime(\"\");\n    setNotes(\"Notes: \");\n    setSubtasks(\"\");\n    setIndic(false);\n    setIndicVal(2);\n    setstName(\"\");\n  };\n  const addST = (e) => {\n    setSubtasks([\n      ...subtasks,\n      {\n        stName,\n        stType: indic,\n        goal: indicVal,\n        stID: Math.floor(Math.random() * 900000),\n        value: 0,\n      },\n    ]);\n    setIndic(false);\n    setIndicVal(2);\n    setstName(\"\");\n  };\n  //hh%3Amm <- time format\n  return (\n    <React.Fragment>\n      <form onSubmit={handleSubmit}>\n        <div id=\"taskcreator\">\n          <div className=\"lineup\">\n            <div>\n              <input\n                className=\"tasknameinput taskcreationinput\"\n                placeholder=\"Task Name\"\n                type=\"text\"\n                value={taskName}\n                onChange={(e) => setName(e.target.value)}\n                name=\"taskName\"\n                required\n              />\n              <label id=\"tasknamelabel\" htmlFor=\"taskName\">\n                Task Name\n              </label>\n            </div>\n            <div id=\"timeinput\" className=\"double\">\n              <div>\n                <label htmlFor=\"starttime\" className=\"timeLabel\">\n                  Start Time\n                </label>\n                <input\n                  className=\"taskcreationinput timeinput\"\n                  type=\"time\"\n                  name=\"starttime\"\n                  onChange={(e) => setStartTime(e.target.value)}\n                  value={startTime}\n                  pattern=\"[0-9]{2}:[0-9]{2}\"\n                  required\n                />\n              </div>\n              <div>\n                <label htmlFor=\"endtime\" className=\"timeLabel\">\n                  End Time\n                </label>\n                <input\n                  className=\"taskcreationinput timeinput\"\n                  type=\"time\"\n                  name=\"endtime\"\n                  onChange={(e) => setEndTime(e.target.value)}\n                  value={endTime}\n                  pattern=\"[0-9]{2}:[0-9]{2}\"\n                  min={startTime}\n                  required\n                />\n              </div>\n            </div>\n            <div className=\"stlist\">\n              {subtasks[0] ? (\n                <ul>\n                  {subtasks.map((sub) => {\n                    return (\n                      <SubtaskPreview\n                        stName={sub.stName}\n                        key={sub.stID}\n                        subtask={sub}\n                      />\n                    );\n                  })}\n                </ul>\n              ) : null}\n            </div>\n            <div>\n              <div className=\"creater of subtasks\">\n                <input\n                  className=\"subtasknameinput taskcreationinput\"\n                  placeholder=\"Subtask Name\"\n                  type=\"text\"\n                  onChange={(e) => setstName(e.target.value)}\n                  value={stName}\n                />\n              </div>\n            </div>\n            <div className=\"secondpart\">\n              <label className=\"switch\" id=\"typeselector\">\n                <input\n                  type=\"checkbox\"\n                  name=\"indication\"\n                  onChange={(e) => setIndic(!indic)}\n                  className=\"check\"\n                  checked={indic}\n                />\n                <span className=\"slider\"></span>\n              </label>\n              {indic ? (\n                <input\n                  type=\"number\"\n                  name=\"indicval\"\n                  onChange={(e) => setIndicVal(e.target.value)}\n                  value={indicVal}\n                  min={1}\n                  max={999}\n                />\n              ) : (\n                <input type=\"checkbox\" name=\"indicval\" unchecked=\"true\" />\n              )}\n              <span onClick={addST} className=\"stSub\">\n                +\n              </span>\n            </div>\n          </div>\n          <textarea\n            cols=\"28\"\n            rows=\"5\"\n            className=\"tasknotesinput taskcreationinput\"\n            onChange={(e) => setNotes(e.target.value)}\n            value={taskNotes}\n          ></textarea>\n\n          <input type=\"submit\" value=\"+\" id=\"creatoradd\" />\n        </div>\n      </form>\n    </React.Fragment>\n  );\n}\n\nexport default TaskCreator;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction BackHeader() {\n  let today = new Date();\n  today = today.toDateString();\n  return (\n    <div className=\"backheader\">\n      <span>{today}</span>\n      <Link className=\"right\" to=\"/dayschedule\">\n        Schedule\n      </Link>\n    </div>\n  );\n}\n\nexport default BackHeader;\n","import React from \"react\";\nimport CreationSidebar from \"./creationsidebar\";\nimport SchedulePreview from \"./schedulepreview\";\nimport TaskCreator from \"./taskcreator\";\nimport BackHeader from \"../backheader\";\nimport ScheduleContextProvider from \"../../contexts/schedulecontext\";\nimport DayNotesContextProvider from \"../../contexts/daynotescontext\";\nimport BooleanContextProvider from \"../../contexts/booleancontext\";\nimport DayPresetContextProvider from \"../../contexts/daypresetcontext\";\nfunction Main() {\n  return (\n    <ScheduleContextProvider>\n      <React.Fragment>\n        <div className=\"doubler\">\n          <div>\n            <BooleanContextProvider>\n              <DayNotesContextProvider>\n                <DayPresetContextProvider>\n                  <CreationSidebar />\n                </DayPresetContextProvider>\n              </DayNotesContextProvider>\n            </BooleanContextProvider>\n          </div>\n\n          <div className=\"content\">\n            <BackHeader />\n            <SchedulePreview />\n            <TaskCreator />\n          </div>\n        </div>\n      </React.Fragment>\n    </ScheduleContextProvider>\n  );\n}\n\nexport default Main;\n","import { dateConv, now } from \"./shared\";\n\nexport const findCIndex = (tasks) => {\n  return tasks.findIndex(\n    (task) =>\n      dateConv(task.startTime.toString()) <= now &&\n      dateConv(task.endTime.toString()) >= now\n  );\n};\n","import React, { useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ScheduleContext } from \"../../contexts/schedulecontext\";\nimport { dateConv, disp12Time, now } from \"../scripts/shared.js\";\nimport { findCIndex } from \"../scripts/currenttaskscripts\";\n\nfunction ScheduleHeader() {\n  const { tasks } = useContext(ScheduleContext);\n  let today = now.toDateString();\n  let index = findCIndex(tasks);\n  useEffect(() => {\n    index = findCIndex(tasks);\n    if (document.getElementById(\"progress\")) {\n      const prog = document.getElementById(\"progress\");\n      const st = tasks[index] ? dateConv(tasks[index].startTime) : 0;\n      const et = tasks[index] ? dateConv(tasks[index].endTime) : 0;\n      let left = et - now;\n      //use left to set timeout update the state\n      let total = et - st;\n      console.log((left / total) * 100 + \"%\");\n      prog.style.animationName = \"anim\";\n      prog.style.width = ((total - left) / total) * 100 + \"%\";\n      prog.style.animationTimingFunction = \"linear\";\n      prog.style.animationDuration = left + \"ms\";\n      prog.style.animationIterationCount = 1;\n    }\n  }, []);\n  return (\n    <React.Fragment>\n      <div className=\"scheduleheader\">\n        <div className=\"timegroup\">\n          <span>\n            {tasks[index] ? disp12Time(tasks[index].startTime) : null}\n          </span>\n          <span id=\"currenttimedisplay\"></span>\n          <span>{tasks[index] ? disp12Time(tasks[index].endTime) : null}</span>\n        </div>\n        <div className=\"baseline\">\n          <span>{today}</span>\n          <Link className=\"right\" to=\"/\">\n            Schedule Creator\n          </Link>\n        </div>\n        <div id=\"progressbar\">\n          <div id=\"progress\"></div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default ScheduleHeader;\n","import React, { useContext, useState } from \"react\";\nimport { ScheduleContext } from \"../../contexts/schedulecontext\";\n\nfunction SubtaskDisplay(props) {\n  const { dispatch } = useContext(ScheduleContext);\n  const [value, setValue] = useState(props.sub.value);\n  //Actually Change in Reducer with an edit subtask action\n  function flipCheck() {\n    let query = \"[key2='\" + props.sub.stID + \"']\";\n    let thisone = document.querySelector(query);\n    if (thisone) {\n      if (!thisone.classList.contains(\"finished\")) {\n        thisone.classList.add(\"finished\");\n        //Finish subtask in reducer\n      } else {\n        thisone.classList.remove(\"finished\");\n        //unfinish subtask in reducer\n      }\n    }\n  }\n  return (\n    <div className=\"subtaskdisplay\" key={props.sub.stID} key2={props.sub.stID}>\n      <input type=\"checkbox\" className=\"check\" onChange={flipCheck} />\n      <p>{props.stName}</p>\n\n      {props.sub.stType ? (\n        <div>\n          <input\n            type=\"number\"\n            name=\"indicval\"\n            onChange={(e) => setValue(e.target.value)}\n            value={value ? value : 0}\n            min={0}\n            max={props.sub.goal}\n          />\n          <span>/{props.sub.goal}</span>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default SubtaskDisplay;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport SubtaskDisplay from \"./subtaskdisplay\";\nimport { ScheduleContext } from \"../../contexts/schedulecontext\";\nimport { dateConv, now } from \"../scripts/shared\";\nimport { currentIndex } from \"../scripts/currenttaskscripts\";\n\nfunction CurrentDisplay() {\n  const { tasks, dispatch } = useContext(ScheduleContext);\n\n  let currentIndex = tasks.findIndex(\n    (task) =>\n      dateConv(task.startTime.toString()) <= now &&\n      dateConv(task.endTime.toString()) >= now\n  );\n  const [note, setNote] = useState(\n    currentIndex >= 0 ? tasks[currentIndex.taskNotes] : \"\"\n  );\n\n  const updateNote = (change) => {\n    setNote(change);\n    dispatch({\n      type: \"EDIT_TASK_NOTE\",\n      task: {\n        note: note,\n        ind: currentIndex,\n      },\n    });\n  };\n  function markText() {\n    let currentName = document.getElementById(\"currentdisplayname\");\n    if (currentName.className == \"\") {\n      currentName.className = \"finished\";\n    } else {\n      currentName.className = \"\";\n    }\n  }\n  const toggleTask = (tid) => {\n    console.log(tid);\n    dispatch({\n      type: \"TOGGLE_TASK\",\n      task: {\n        tID: tid,\n      },\n    });\n  };\n  useEffect(() => {\n    currentIndex = tasks.findIndex(\n      (task) =>\n        dateConv(task.startTime.toString()) <= now &&\n        dateConv(task.endTime.toString()) >= now\n    );\n  }, []);\n  return (\n    <div id=\"currentdisplay\">\n      <div id=\"currenttasktop\">\n        <ul className=\"inline\">\n          <h1 id=\"currentdisplayname\" className=\"\">\n            {currentIndex >= 0 ? tasks[currentIndex].taskName : \"Break\"}\n          </h1>\n        </ul>\n        {currentIndex >= 0 ? (\n          <button\n            id=\"nexttaskbutt\"\n            onClick={() => {\n              markText();\n              toggleTask(tasks[currentIndex].tID);\n\n              console.log(\"toggle clicked\");\n            }}\n          >\n            Mark Complete\n          </button>\n        ) : null}\n      </div>\n      <div id=\"currentdiplaysub\">\n        {currentIndex >= 0\n          ? tasks[currentIndex].subtasks\n            ? tasks[currentIndex].subtasks.map((subtask) => {\n                return (\n                  <SubtaskDisplay\n                    sub={subtask}\n                    key={subtask.stID}\n                    stName={subtask.stName}\n                  />\n                );\n              })\n            : null\n          : null}\n      </div>\n      <div id=\"currentdisplaynotes\">\n        <textarea\n          className=\"dayNotes fillup\"\n          defaultValue={\n            currentIndex >= 0 ? tasks[currentIndex].taskNotes : \"Task Notes:\"\n          }\n          onChange={\n            currentIndex >= 0 ? (e) => updateNote(e.target.value) : null\n          }\n        ></textarea>\n      </div>\n    </div>\n  );\n}\n\nexport default CurrentDisplay;\n","import React, { useContext } from \"react\";\nimport SubtaskDisplay from \"./subtaskdisplay\";\nimport { BooleanContext } from \"../../contexts/booleancontext\";\n\nfunction BooleanList() {\n  const { bools } = useContext(BooleanContext);\n  return (\n    <div id=\"booleanlist\" className=\"scroll\">\n      {bools[0] ? (\n        <ul>\n          {bools.map((bool) => {\n            return (\n              <SubtaskDisplay\n                sub={bool}\n                stName={bool.boolName}\n                key={bool.bID}\n                key2={bool.bID}\n              />\n            );\n          })}\n        </ul>\n      ) : null}\n    </div>\n  );\n}\n\nexport default BooleanList;\n","import React, { useContext } from \"react\";\nimport TaskBlock from \"../taskblock\";\nimport { ScheduleContext } from \"../../contexts/schedulecontext\";\nimport { dateConv } from \"../scripts/shared\";\n\nfunction UpcomingList() {\n  let now = new Date();\n  const { tasks } = useContext(ScheduleContext);\n  return (\n    <div id=\"upcominglist\" className=\"scroll\">\n      <h3 className=\"lightlabel\">Coming Up:</h3>\n      {tasks[0] ? (\n        <ul className=\"scroll\">\n          {tasks.map((task) => {\n            return dateConv(task.startTime.toString()) > now ? (\n              <TaskBlock task={task} key={task.tID} />\n            ) : null;\n          })}\n        </ul>\n      ) : null}\n    </div>\n  );\n}\n\nexport default UpcomingList;\n","import React, {useContext} from \"react\";\nimport { DayNotesContext } from \"../../contexts/daynotescontext\";\n\nfunction DayNotes() {\n  const {note,editNote} = useContext(DayNotesContext)\n\n\n  return <textarea id=\"daynotes\" onChange={(e) => editNote(e.target.value)}\n  defaultValue={note[0]? note[0].note : null}></textarea>;\n}\n\nexport default DayNotes;\n","import React from \"react\";\nimport ScheduleHeader from \"./scheduleheader\";\nimport CurrentDisplay from \"./currenttaskdisplay\";\nimport BooleanList from \"./booleanlist\";\nimport UpcomingList from \"./upcominglist\";\nimport DayNotes from \"./daynotes\";\nimport ScheduleContextProvider from \"../../contexts/schedulecontext\";\nimport DayNotesContextProvider from \"../../contexts/daynotescontext\";\nimport BooleanContextProvider from \"../../contexts/booleancontext\";\n\nfunction ScheduleMain() {\n  return (\n    <div>\n      <ScheduleContextProvider>\n        <ScheduleHeader />\n        <div id=\"schedulegrid\">\n          <CurrentDisplay />\n          <UpcomingList />\n          <DayNotesContextProvider>\n            <DayNotes />\n          </DayNotesContextProvider>\n          <BooleanContextProvider>\n            <BooleanList />\n          </BooleanContextProvider>\n        </div>\n      </ScheduleContextProvider>\n    </div>\n  );\n}\n\nexport default ScheduleMain;\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/creation/main.js\";\nimport ScheduleMain from \"./components/schedule/schedulemain.js\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ScheduleContextProvider from \"./contexts/schedulecontext\";\n\nfunction App() {\n  return (\n    <Router baseline=\"{process.env.PUBLIC_URL + '/'}\">\n      <Switch>\n        <Route path=\"/dayschedule\">\n          <ScheduleContextProvider>\n            <ScheduleMain />\n          </ScheduleContextProvider>\n        </Route>\n        <Route path=\"/\">\n          <ScheduleContextProvider>\n            <Main />\n          </ScheduleContextProvider>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n// <Router>\n//   <Route exact path=\"/\" render={(props) => <Main />} />\n//   <Route exact path=\"/schedule\" render={(props) => <ScheduleMain />} />\n// </Router>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}