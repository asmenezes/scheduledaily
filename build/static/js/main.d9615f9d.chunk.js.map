{"version":3,"sources":["components/creation/creationselection.js","components/creation/creationsidebar.js","reducers/schedulereducer.js","contexts/ScheduleContext.js","components/taskblock.js","components/creation/schedulepreview.js","components/creation/taskcreator.js","components/backheader.js","components/creation/main.js","components/schedule/scheduleheader.js","components/schedule/subtaskdisplay.js","components/schedule/currenttaskdisplay.js","components/schedule/booleanlist.js","components/schedule/upcominglist.js","components/schedule/daynotes.js","components/schedule/schedulemain.js","App.js","serviceWorker.js","index.js"],"names":["CreationSelection","props","className","selectionname","CreationSidebar","Fragment","id","cols","rows","defaultValue","scheduleReducer","state","action","type","taskName","task","tID","Math","random","pID","startTime","endTime","isComplete","taskNotes","subtasks","filter","ScheduleContext","createContext","ScheduleContextProvider","useReducer","localData","localStorage","getItem","JSON","parse","tasks","dispatch","useEffect","setItem","stringify","Provider","value","children","TaskBlock","useContext","find","onClick","SchedulePreview","console","log","length","map","key","TaskCreator","useState","setName","setStartTime","setEndTime","setNotes","setSubtasks","onSubmit","e","preventDefault","placeholder","onChange","target","required","htmlFor","name","BackHeader","today","Date","toDateString","to","Main","ScheduleHeader","class","SubtaskDisplay","stName","CurrentDisplay","subtask","BooleanList","UpcomingList","DayNotes","ScheduleMain","App","baseline","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d9615f9d.chunk.js","sourcesContent":["import React, {useState} from \"react\";\n\nfunction CreationSelection(props) {\n  return <div className= \"creationselection\">\n    <button className = \"deletebutton\">x</button>\n    <p className = \"selectionname\">{props.selectionname}</p>\n  </div>;\n}\n\nexport default CreationSelection;\n","import React, { useState } from \"react\";\nimport CreationSelection from \"./creationselection\";\n\nfunction CreationSidebar() {\n  return (\n    <React.Fragment>\n      <div className=\"sidebar\" id=\"creationsidebar\">\n        <div className=\"sidebarlabel\">\n          <p className=\"lighttext\">Preset Schedules:</p>\n          <div className=\"sidebarlist\">\n            <CreationSelection selectionname={\"Selection\"} />\n          </div>\n          <button id=\"createpresetbutton\">Create Preset From Current</button>\n        </div>\n        <div className=\"sidebarlabel\">\n          <p className=\"lighttext\">Preset Tasks:</p>\n          <div className=\"sidebarlist\">\n            <CreationSelection selectionname={\"Selection\"} />\n          </div>\n        </div>\n        <div className=\"sidebarlabel\">\n          <p className=\"lighttext\">Un-Timed Tasks:</p>\n          <div className=\"sidebarlist\">\n            <CreationSelection selectionname={\"Selection\"} />\n          </div>\n        </div>\n        <textarea\n          cols=\"28\"\n          rows=\"6\"\n          className=\"dayNotes\"\n          defaultValue=\"Day Notes: \"\n        ></textarea>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default CreationSidebar;\n","export const scheduleReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TASK\":\n      return [\n        ...state,\n        {\n          taskName: action.task.taskName,\n          tID: Math.random() * 900000,\n          pID: 1,\n          startTime: action.task.startTime,\n          endTime: action.task.endTime,\n          isComplete: false,\n          taskNotes: action.task.taskNotes,\n          subtasks: action.task.subtasks,\n        },\n      ];\n    case \"REMOVE_TASK\":\n      return state.filter((task) => task.tID !== action.tID);\n    default:\n      return state;\n  }\n};\n// Complete current task\n/*\ncomplete subtask\nupdate subtask\ngetsubtasks\nupdate bookeantask\nadd task\ndelete task\nupdate task\nupdate notes\nget all tasks\nget current task\nnext task\n */\n","import React, { createContext, useReducer, useEffect } from \"react\";\nimport { scheduleReducer } from \"../reducers/schedulereducer\";\nimport ReactDOM from \"react-dom\";\n\nexport const ScheduleContext = createContext();\n\nconst ScheduleContextProvider = (props) => {\n  const [tasks, dispatch] = useReducer(scheduleReducer, [], () => {\n    const localData = localStorage.getItem(\"tasks\");\n    return localData ? JSON.parse(localData) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n  return (\n    <ScheduleContext.Provider value={{ tasks, dispatch }}>\n      {props.children}\n    </ScheduleContext.Provider>\n  );\n};\n\nexport default ScheduleContextProvider;\n","import React, { useContext } from \"react\";\nimport { ScheduleContext } from \"../contexts/ScheduleContext\";\n\nfunction TaskBlock(props) {\n  const { tasks, dispatch } = useContext(ScheduleContext);\n  const task = tasks.find((task) => task.tID === props.tID);\n  return task ? (\n    <div className=\"taskblock\">\n      <button\n        className=\"deletebutton\"\n        onClick={() => dispatch({ type: \"REMOVE_TASK\", tID: task.tID })}\n      >\n        x\n      </button>\n      <p className=\"taskname\">{task.taskName}</p>\n      <div className=\"time\">\n        <p className=\"stime\">{task.startTime}</p>\n        <p>{task.endTime}</p>\n      </div>\n      <div className=\"subtask\">\n        <span>SubTasks</span>\n      </div>\n    </div>\n  ) : null;\n}\n\nexport default TaskBlock;\n","import React, { useContext, useEffect } from \"react\";\nimport TaskBlock from \"../taskblock\";\nimport ScheduleContextProvider, {\n  ScheduleContext,\n} from \"../../contexts/ScheduleContext\";\nimport Task from \"../models/taskmodel\";\n\nconst SchedulePreview = (props) => {\n  const { tasks } = useContext(ScheduleContext);\n  console.log(tasks);\n\n  return (\n    <React.Fragment>\n      <div className=\"schedulepreviewcontainer\">\n        <ScheduleContextProvider value={tasks}>\n          <div className=\"schedulepreview\">\n            {tasks.length\n              ? tasks.map((task) => {\n                  return <TaskBlock tID={task.tID} key={task.tID} />;\n                })\n              : null}\n          </div>\n        </ScheduleContextProvider>\n      </div>\n    </React.Fragment>\n  );\n};\n// {tasks.length ? (\n//   tasks.map((task) => {\n//     return <TaskBlock tID={task.tID} key={task.tID} />;\n//   })\n// ) : (\n//   <div></div>\n// )}\nexport default SchedulePreview;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { ScheduleContext } from \"../../contexts/ScheduleContext\";\n\nfunction TaskCreator(props) {\n  const { tasks, dispatch } = useContext(ScheduleContext);\n  const [taskName, setName] = useState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [taskNotes, setNotes] = useState(\"\");\n  const [subtasks, setSubtasks] = useState(\"\");\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: \"ADD_TASK\",\n      task: {\n        taskName,\n        startTime,\n        endTime,\n        taskNotes,\n        subtasks,\n      },\n    });\n    setName(\"\");\n    setStartTime(\"\");\n    setEndTime(\"\");\n    setNotes(\"Notes: \");\n    setSubtasks([]);\n  };\n\n  return (\n    <React.Fragment>\n      <form onSubmit={handleSubmit}>\n        <div id=\"taskcreator\">\n          <div className=\"lineup\">\n            <div>\n              <input\n                className=\"tasknameinput taskcreationinput\"\n                placeholder=\"Task Name\"\n                type=\"text\"\n                value={taskName}\n                onChange={(e) => setName(e.target.value)}\n                required\n              />\n            </div>\n            <div>\n              <label htmlFor=\"starttime\"></label>\n              <input\n                className=\"taskcreationinput timeinput\"\n                type=\"time\"\n                name=\"starttime\"\n                onChange={(e) => setStartTime(e.target.value)}\n                value={startTime}\n              />\n              <label htmlFor=\"endtime\"></label>\n              <input\n                className=\"taskcreationinput timeinput\"\n                type=\"time\"\n                name=\"endtime\"\n                onChange={(e) => setEndTime(e.target.value)}\n                value={endTime}\n              />\n            </div>\n            <div>\n              <div className=\"create list of subtasks\"></div>\n              <div className=\"creater of subtasks\">\n                <input\n                  className=\"subtasknameinput taskcreationinput\"\n                  placeholder=\"Subtask Name\"\n                  type=\"text\"\n                />\n              </div>\n            </div>\n            <div className=\"secondpart\">\n              <label className=\"switch\" id=\"typeselector\">\n                <input type=\"checkbox\" />\n                <span className=\"slider\"></span>\n              </label>\n              indicator\n            </div>\n          </div>\n          <textarea\n            cols=\"28\"\n            rows=\"5\"\n            className=\"tasknotesinput taskcreationinput\"\n            onChange={(e) => setNotes(e.target.value)}\n            value={taskNotes}\n          ></textarea>\n          <div>\n            <input type=\"submit\" value=\"Add\" />\n          </div>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n}\n\nexport default TaskCreator;\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction BackHeader() {\n  let today = new Date();\n  today = today.toDateString();\n  return (\n    <div className=\"backheader\">\n      <span>{today}</span>\n      <Link className=\"right\" to=\"/dayschedule\">\n        Schedule\n      </Link>\n    </div>\n  );\n}\n\nexport default BackHeader;\n\n// <a className=\"right\" href=\"/schedule\">\n//\n//   Schedule\n// </a>\n","import React, { useContext } from \"react\";\nimport CreationSidebar from \"./creationsidebar\";\nimport SchedulePreview from \"./schedulepreview\";\nimport TaskCreator from \"./taskcreator\";\nimport BackHeader from \"../backheader\";\nimport ScheduleContextProvider, {\n  ScheduleContext,\n} from \"../../contexts/ScheduleContext\";\n\nfunction Main() {\n  const { tasks, dispatch } = useContext(ScheduleContext);\n  return (\n    <React.Fragment>\n      <div className=\"doubler\">\n        <div>\n          <CreationSidebar />\n        </div>\n        <div className=\"content\">\n          <ScheduleContextProvider>\n            <BackHeader />\n            <SchedulePreview props={tasks} />\n            <TaskCreator props={tasks} />\n          </ScheduleContextProvider>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Main;\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction ScheduleHeader() {\n  let today = new Date();\n  today = today.toDateString();\n  return (\n    <React.Fragment>\n      <div class=\"scheduleheader\">\n        <div className=\"timegroup\">\n          <span>12:00</span>\n          <span id=\"currenttimedisplay\">12:30</span>\n          <span>12:45</span>\n        </div>\n        <div className=\"baseline\">\n          <span>{today}</span>\n          <Link className=\"right\" to=\"/\">\n            Schedule Creator\n          </Link>\n        </div>\n        <div id=\"progressbar\">\n          <div id=\"progress\"></div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default ScheduleHeader;\n","import React, { useState } from \"react\";\n\nfunction SubtaskDisplay(props) {\n  return (\n    <div class=\"subtaskdisplay\">\n      <input type=\"checkbox\" class=\"check\" />\n      <p>{props.stName}</p>\n      <p>Indic Placeholder</p>\n    </div>\n  );\n}\n\nexport default SubtaskDisplay;\n","import React, { useContext } from \"react\";\nimport SubtaskDisplay from \"./subtaskdisplay\";\n\nfunction CurrentDisplay(props) {\n  return (\n    <div id=\"currentdisplay\">\n      <div id=\"currenttasktop\">\n        <h1 id=\"currentdisplayname\">\n          {props.task.taskName ? props.task.taskName : \"Break\"}\n        </h1>\n        <button id=\"nexttaskbutt\">Next Task</button>\n      </div>\n      <div id=\"currentdiplaysub\">\n        {props.task.subtasks ? (\n          props.task.subtasks.map((subtask) => {\n            return <SubtaskDisplay stName={subtask.stName} />;\n          })\n        ) : (\n          <div></div>\n        )}\n      </div>\n      <div id=\"currentdisplaynotes\">\n        <textarea className=\"dayNotes fillup\">{props.task.taskNotes}</textarea>\n      </div>\n    </div>\n  );\n}\n\nexport default CurrentDisplay;\n","import React, { useState } from \"react\";\nimport SubtaskDisplay from \"./subtaskdisplay\";\n\nfunction BooleanList() {\n  return (\n    <div id=\"booleanlist\">\n      <SubtaskDisplay />\n    </div>\n  );\n}\n\nexport default BooleanList;\n","import React, { useContext } from \"react\";\nimport TaskBlock from \"../taskblock\";\nimport { ScheduleContext } from \"../../contexts/ScheduleContext\";\n\nfunction UpcomingList(props) {\n  const { tasks } = useContext(ScheduleContext);\n  return (\n    <div id=\"upcominglist\">\n      <h3 className=\"lightlabel\">Upcoming Tasks:</h3>\n      <div className=\"scroll\">\n        {tasks.map((task) => {\n          return (\n            <TaskBlock\n              startTime={task.startTime}\n              endTime={task.endTime}\n              taskName={task.taskName}\n              tID={task.tID}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default UpcomingList;\n","import React, { useState } from \"react\";\n\nfunction DayNotes() {\n  return <textarea id=\"daynotes\" defaultValue=\"Day Notes: \"></textarea>;\n}\n\nexport default DayNotes;\n","import React, { useContext } from \"react\";\nimport ScheduleHeader from \"./scheduleheader\";\nimport CurrentDisplay from \"./currenttaskdisplay\";\nimport BooleanList from \"./booleanlist\";\nimport UpcomingList from \"./upcominglist\";\nimport DayNotes from \"./daynotes\";\nimport ScheduleContextProvider, {\n  ScheduleContext,\n} from \"../../contexts/ScheduleContext\";\n\nfunction ScheduleMain() {\n  const { tasks } = useContext(ScheduleContext);\n  return (\n    <div>\n      <ScheduleHeader />\n      <div id=\"schedulegrid\">\n        <ScheduleContextProvider>\n          <CurrentDisplay task={tasks.length ? tasks[0] : []} />\n          <UpcomingList tasks={tasks} />\n          <DayNotes />\n          <BooleanList />\n        </ScheduleContextProvider>\n      </div>\n    </div>\n  );\n}\n\nexport default ScheduleMain;\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/creation/main.js\";\nimport ScheduleMain from \"./components/schedule/schedulemain.js\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ScheduleContextProvider from \"./contexts/ScheduleContext\";\n\nfunction App() {\n  return (\n    <Router baseline=\"{process.env.PUBLIC_URL + '/'}\">\n      <Switch>\n        <Route path=\"/dayschedule\">\n          <ScheduleContextProvider>\n            <ScheduleMain />\n          </ScheduleContextProvider>\n        </Route>\n        <Route path=\"/\">\n          <ScheduleContextProvider>\n            <Main />\n          </ScheduleContextProvider>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n// <Router>\n//   <Route exact path=\"/\" render={(props) => <Main />} />\n//   <Route exact path=\"/schedule\" render={(props) => <ScheduleMain />} />\n// </Router>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}